name: Build MiniToolbox (Windows)

on:
  # 手动触发
  workflow_dispatch:
  # 发布触发（仅 tag）
  push:
    tags: [ 'v*' ]

permissions:
  contents: write

jobs:
  build-win:
    name: Build on Windows
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js (with cache)
        if: ${{ hashFiles('**/package-lock.json') != '' }}
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Setup Node.js (no cache)
        if: ${{ hashFiles('**/package-lock.json') == '' }}
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies (npm ci)
        if: ${{ hashFiles('**/package-lock.json') != '' }}
        run: npm ci

      - name: Install dependencies (npm install fallback)
        if: ${{ hashFiles('**/package-lock.json') == '' }}
        run: npm install

      - name: Build Windows artifacts (no publish)
        env:
          # 禁用自动代码签名与自动发布
          CSC_IDENTITY_AUTO_DISCOVERY: false
        run: npm run build:win -- --publish=never

      - name: Upload installer (.exe)
        uses: actions/upload-artifact@v4
        with:
          name: MiniToolbox-Installer
          path: dist/*-x64.exe
          if-no-files-found: error
          retention-days: 7

      - name: Upload portable (.exe)
        uses: actions/upload-artifact@v4
        with:
          name: MiniToolbox-Portable
          path: dist/*-portable.exe
          if-no-files-found: warn
          retention-days: 7

  release:
    name: Attach artifacts to GitHub Release
    if: startsWith(github.ref, 'refs/tags/')
    needs: build-win
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


